name: Compile

on:
  push:
    paths-ignore:
      - .github/**
      - .gitignore
      - LICENSE
      - README.md
    branches:
      - main
  release:
    types:
      - released
  workflow_dispatch:

jobs:
  compile:
    name: Compile Hugo
    runs-on: ubuntu-latest

    continue-on-error: true

    strategy:
      matrix:
        include:
          - type: standard
            platform: linux/amd64
            arch: x86_64
            goarch: amd64

          - type: standard
            platform: linux/arm/v7
            arch: armv7l
            goarch: arm

          - type: standard
            platform: linux/arm64/v8
            arch: aarch64
            goarch: arm64

          - type: extended
            platform: linux/amd64
            arch: x86_64
            goarch: amd64

          - type: extended
            platform: linux/arm/v7
            arch: armv7l
            goarch: arm

          - type: extended
            platform: linux/arm64/v8
            arch: aarch64
            goarch: arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Enable Docker experimental
        run: make enable-docker-experimental

      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Load environment variables
        uses: k15g/action-load-env@v1
        with:
          extras: |
            HUGO_TYPE=${{ matrix.type }}
            HUGO_ARCH=${{ matrix.arch }}

      - name: Extract platform variables
        run: make extract-platform
        env:
          HUGO_PLATFORM: ${{ matrix.platform }}

      - name: Pull Docker image
        run: make docker-pull

      - name: Fetch Hugo source
        run: make checkout
        env:
          HUGO_BRANCH: v${{ env.HUGO_VERSION }}

      - name: Compile
        run: make compile-${{ matrix.type }}
        env:
          HUGO_VENDOR: ${{ github.repository_owner }}
          GOARCH: ${{ matrix.goarch }}

      - name: Verify
        run: make verify

      - name: Copy resources
        run: make copy

      - name: Create tar.gz
        run: make package-bundle

      - name: Upload bundle (release)
        uses: k15g/action-github-asset-upload@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.TARGET_BUNDLE }}
          name: hugo-${{ matrix.type }}-${{ env.HUGO_VERSION }}-linux-${{ env.HUGO_ARCH }}.tar.gz
          label: Hugo ${{ env.HUGO_VERSION }}, ${{ matrix.type }} edition (Linux ${{ env.HUGO_ARCH }})

      - name: Upload bundle (artifact)
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.TARGET_BUNDLE }}
          name: hugo-${{ env.HUGO_VERSION }}-dist
          retention-days: 3

  checksums:
    name: Checksum file (sha)
    runs-on: ubuntu-latest
    needs: compile

    strategy:
      matrix:
        alg:
          - 256
          - 512

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Load environment variables
        uses: k15g/action-load-env@edge

      - name: Load environment variables
        uses: k15g/action-load-env@edge
        with:
          extras: |
            TARGET_CHECKSUMS=target/hugo-${{ env.HUGO_VERSION }}-checksums-sha${{ matrix.alg }}.txt

      - name: Download dist
        uses: actions/download-artifact@v3
        with:
          name: hugo-${{ env.HUGO_VERSION }}-dist
          path: dist

      - name: Generate checksums
        run: |
          mkdir -p $(dirname $TARGET_CHECKSUMS)
          cd dist && shasum -a ${{ matrix.alg }} * > ../$TARGET_CHECKSUMS

      - name: Upload checksums (release)
        uses: k15g/action-github-asset-upload@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.TARGET_CHECKSUMS }}
          label: Hugo ${{ env.HUGO_VERSION }}, checksums (sha${{ matrix.alg }})

      - name: Upload checksums (artifacs)
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.TARGET_CHECKSUMS }}
          name: hugo-${{ env.HUGO_VERSION }}-dist
          retention-days: 3

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - checksums
    environment: Release
    if: "!startsWith(github.ref, 'refs/tags/')"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Load environment variables
        uses: k15g/action-load-env@v1

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.BOT_TOKEN }}
          commit: main
          tag: v${{ env.HUGO_VERSION }}
